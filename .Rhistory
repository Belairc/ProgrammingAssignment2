install.packages("KernSmooth")
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:lattice", unload=TRUE)
add2 <- function(x, y){
x+y
}
add2(3, 5)
above (x, n=10){
use <- x>n
x [use]
}
above (x, n = 10){
use <- x > n
x[use]
}
x <- 1:30
above (x, n = 10){
use <- x > n
x[use]
}
above <- (x, n = 10) {
use <- x > n
x[use]
}
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above (x)
above (x,8)
cube <- function (x,n){
x^3
}
cube(3)
cube(3,3)
x<-1:10
if(x>5){}
f<-
f <- function(x){
g <- function(y){
y+z
}
z <-4
x+g(x)
}
z<- 10
f(3)
clear
sys.time()
x<- Sys.time()
x
strptime("January 1, 2015 2:10", "%B %d, %Y %H:%M")
x<-5
y<- if(x<3){}
x<-5
Y<- if(x<3){
NA
}else{
10
}
y
x<-5
Y<- if(x<3){
NA
}else{
10
}
y
x<-5
Y<- if(x<3){
NA
}else{
10
}
Y
getwd()
getwd()
help(while)
help (while)
?while
setwd("~/Box Sync/coursera/R")
setwd("~/Box Sync/coursera/R/ProgrammingAssignment2")
??solve()
CBmatrix<-matrix(1:5, 1:5)
CBmatrix
CBmatrix<-matrix(nrow=5, ncol=5)
rows<-1:5
cols<-6:10
cbMatrix<-rbind(rows,cols)
cbMatrix
cbMatrix<-matrix(1:25, 5, 5)
cbMatrix
s<-solve(cbMatrix)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
##example cachemean function
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(cbmatrix)
makeVector(cbMatrix)
cachemean
makeVector
x<-12:514
vec <- makeVector(x)
vec
> cachemean(vec)
x<-12:514
vec<-makeVector(x)
cachemean(vec)
cachemean(vec)
x<-1:100
vec<-makeVector(x)
cachemean(vec)
cachemean(vec)
cachemean(12:514)
cachemean(makeVector(12:514))
